/** @file
  
;******************************************************************************
;* Copyright (c) 2012 - 2014, Insyde Software Corporation. All Rights Reserved.
;*
;* You may not reproduce, distribute, publish, display, perform, modify, adapt,
;* transmit, broadcast, present, recite, release, license or otherwise exploit
;* any part of this publication in any form, by any means, without the prior
;* written permission of Insyde Software Corporation.
;*
;******************************************************************************
*/

#include <Facs.h>
#include <IndustryStandard/Acpi30.h>


  EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE FACS = {
  EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE,
  sizeof (EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE),

  //
  // Hardware Signature will be updated at runtime
  //
  0x00000000,         //HardwareSignature  
  0x00000000,         //FirmwareWakingVector
  0x00000000,         //GlobalLock
  0x00000000,         //EFI_ACPI_3_0_S4BIOS_F //Flags
  0x0000000000000000, //XFirmwareWakingVector
  EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION,//Version
  
  //
  //Reserved[31]
  //
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE,
  EFI_ACPI_RESERVED_BYTE
};

VOID*
ReferenceAcpiTable (
  VOID
  )
{
  //
  // Reference the table being generated to prevent the optimizer from removing the
  // data structure from the exeutable
  //
  return (VOID *)&FACS;
}
