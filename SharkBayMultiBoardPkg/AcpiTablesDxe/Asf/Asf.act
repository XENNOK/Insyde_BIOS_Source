/** @file
  This file contains a structure definition for the ACPI 2.0 ASF
  (ASF!)

;******************************************************************************
;* Copyright (c) 2012 - 2014, Insyde Software Corporation. All Rights Reserved.
;*
;* You may not reproduce, distribute, publish, display, perform, modify, adapt,
;* transmit, broadcast, present, recite, release, license or otherwise exploit
;* any part of this publication in any form, by any means, without the prior
;* written permission of Insyde Software Corporation.
;*
;******************************************************************************
*/

#include <Asf.h>


  EFI_ACPI_1_0_ASF_DESCRIPTION_TABLE ASF_ = {
  EFI_ACPI_1_0_ASF_DESCRIPTION_TABLE_SIGNATURE,
  sizeof (EFI_ACPI_1_0_ASF_DESCRIPTION_TABLE),
  EFI_ACPI_1_0_ASF_DESCRIPTION_TABLE_REVISION,
  0,                // to make sum of entire table == 0
  'I', 'N', 'T', 'E', 'L', ' ',                     // OEM identification

  // OEM table identification
  ((((((((((((('D' << 8) + '8') << 8) + '6') << 8) + '5') << 8) + 'G') << 8) + 'C') << 8) + 'H') << 8) + ' ', // OEM table identification
  1,                // OEM revision number
  ((((('M' << 8) + 'S') << 8) + 'F') << 8) + 'T',  // ASL compiler vendor ID
  1000000,          // ASL compiler revision number

//
  // ASF_INFO
//
  0x00,              // Type "ASF_INFO"
  0x00,               // Reserved
  sizeof (EFI_ACPI_ASF_INFO), // Length
  0x05,               // Min Watchdog Reset Value
  0xFF,               // Min ASF Sensor Inter-poll Wait Time
  0x0001,             // System ID
  0x57010000,         // IANA Manufacture ID for Intel
  0x00,               // Feature Flag
  0x00, 0x00, 0x00,   // Reserved

  //
  // ASF_ALRT
  //

  0x01,             // Type "ASF_ALRT"
  0x00,             // Reserved
  sizeof (EFI_ACPI_ASF_ALRT), // Length
  0x00,             // Assertion Event Bit Mask
  0x00,             // Deassertion Event Bit Mask
  0x03,             // Number Of Alerts
  0x0C,             // Array Element Length
  //
  // ICH Slave SMBUS Read devices
  //
  0x89, 0x04, 0x01, 0x01, 0x05, 0x6F, 0x00, 0x68, 0x08, 0x88, 0x17, 0x00,  // Device 0
  0x89, 0x04, 0x04, 0x04, 0x07, 0x6F, 0x00, 0x68, 0x20, 0x88, 0x03, 0x00,  // Device 1
  0x89, 0x05, 0x01, 0x01, 0x19, 0x6F, 0x00, 0x68, 0x20, 0x88, 0x22, 0x00,  // Device 2


  //
  // ASF_RCTL
  //
  0x02,              // Type "ASF_RCTL"
  0x00,              // Reserved
  sizeof (EFI_ACPI_ASF_RCTL), // Length
  0x04,              // Number of Controls
  0x04,              // Array Element Length
  0x0000,            // Reserved
  //
  // ICH Slave SMBUS Write cmds
  //
  0x00, 0x88, 0x00, 0x03,     // Control 0 --> Reset system
  0x01, 0x88, 0x00, 0x02,     // Control 1 --> Power Off system
  0x02, 0x88, 0x00, 0x01,     // Control 2 --> Power On system
  0x03, 0x88, 0x00, 0x04,     // Control 3 --> Power Cycle Reset (off then on)

  //
  // ASF_RCMP
  //
  0x03,               // Type "ASF_RCMP"
  0x00,               // Reserved
  sizeof (EFI_ACPI_ASF_RMCP), // Length

  // Remote Control Capabilities supported Bit Masks
  0x20,                       // System Firmware Capabilities Bit Mask (two MSBytes are Rsvd,
  0xF8,                       // Two LSBytes support Lock KYBD, Power Button Lock, FW Verb Blank Screen,
  0x00,                       // Cfg Data Reset, FW Verb Quiet, FW Verb Verbose, FW Verb Forced Progress
  0x00,
  0x00,                       // Special Cmds Bit Mask (Rsvd MSByte, LSByte Does not supports
//  0x1F,                       // CD/DVD Boot, Diag Boot, HD Safe-Mode Boot, HD Boot, PXE Boot.
  0x13,                       // CD/DVD Boot, Diag Boot (Unsupported), HD Safe-Mode Boot (Unsupported), HD Boot, PXE Boot.
  0xF0,                       // System Capabilities Bit Mask (Supports Reset,Power-Up,
                              // Power-Down, Power-Cycle Reset for compat and secure port.
  0x00,                       // Boot Option Complete Code
  0x00,                       // IANA ID for Intel Manufacturer
  0x00,                       // Special Command
  0x00, 0x00,                 // Special Command Parameter
  0x00, 0x00,                 // Boot Options
  0x00, 0x00,                 // OEM Parameters

  //
  // ASF_ADDR
  //
  0x84,                         // Type "ASF_ADDR", last record
  0x00,                         // Reserved
  sizeof (EFI_ACPI_ASF_ADDR),   // Length
  0x00,                         // SEEPROM Address
  ASF_ADDR_DEVICE_ARRAY_LENGTH, // Number Of Devices
  0x5C, 0x68, 0x88, 0xC2, 0xD2, // Fixed SMBus Address (Heceta 6, 82573E device - static def (also an ARP addr),
  0xDC, 0xA0, 0xA2, 0xA4, 0xA6, // ICH Slave Device, SMB ARP, CK410, DB400/800, SDRAM SPD devices
  0xC8                          // TEKOA Slave Device
};

VOID*
ReferenceAcpiTable (
  VOID
  )
{
  //
  // Reference the table being generated to prevent the optimizer from removing the
  // data structure from the exeutable
  //
  return (VOID *)&ASF_;
}
